{"version":3,"sources":["components/NavBar.js","components/EmojiPicker.js","components/Actions.js","views/ChatView.js","components/MessageUtils.js","components/Action.js","components/Message.js","Chat.js","views/Home.js","App.js","serviceWorker.js","index.js","assets/transparent.png"],"names":["NavBar","roomInfo","history","useHistory","params","URLSearchParams","window","location","search","delete","shareURL","origin","toString","useState","showdialogue","setShowdialogue","className","src","transparentLogo","alt","room","color","online","onClick","navigator","share","title","text","url","then","console","log","catch","error","clipboard","writeText","setTimeout","size","replace","EmojiPicker","onPick","emojidata","map","emojiItem","name","key","char","role","aria-labelledby","Actions","onActionClick","AlwaysScrollToBottom","elementRef","useRef","useEffect","current","scrollIntoView","ref","ChatView","messages","emitMessage","emitAction","message","setMessage","showPicker","setShowPicker","actionBar","setActionBar","inputRef","sendMessage","e","trim","which","focus","type","bool","placeholder","onKeyUp","value","onChange","target","emoji","InfoMessage","WarnMessage","BigEmoji","style","fontSize","Animatedtext","BlurText","LottieView","width","height","hideMessage","lottieData","timeout","onDone","data","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","timeOut","err","clearTimeout","options","getFromcomponentMap","props","isSelf","username","likeData","dislikedata","heartData","stayhomedata","Action","Message","id","content","time","matches","match","startTag","endTag","targetText","indexOf","toUpperCase","Chat","setMessages","setRoomInfo","action","setAction","actionType","setActionType","actionData","setActionData","connecting","setConnecting","connected","setConnected","connectionError","setConnectionError","socket","urlparams","get","socketio","on","emit","Date","now","CMD_data","msg","length","info","prev","close","Home","setUsername","setRoom","unameError","setUnameError","roomError","setRoomError","useLocation","append","push","App","path","component","exact","Component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.769ae7c9.chunk.js","sourcesContent":["import React from 'react'\nimport transparentLogo from \"../assets/transparent.png\";\nimport \"../styles/nav.css\";\nimport {FaGlobe,FaSignOutAlt,FaShareAlt} from \"react-icons/fa/index.esm\";\nimport {useState} from 'react';\nimport {useHistory} from 'react-router-dom'\nconst NavBar = ({roomInfo}) => {\n    const history=useHistory();\n    const params=new URLSearchParams(window.location.search);\n    params.delete(\"username\");\n    const shareURL = `${window.location.origin}?${params.toString()}`;\n\n    const [showdialogue, setShowdialogue]=useState(false);\n    function invite(){\n            if (navigator.share) {\n                navigator.share({\n                        title: 'anonymous chat rooms',\n                        text: `join the chat and have some fun anonymously\\n - love from 𝗮𝗻𝗼𝗻𝘆𝗺𝗼𝘂𝘀 𝗰𝗵𝗮𝘁 𝗿𝗼𝗼𝗺𝘀`,\n                        url: shareURL,\n                    })\n                    .then(() => console.log('Successful share'))\n                    .catch((error) => console.log(error));\n            }\n            navigator.clipboard.writeText(shareURL);\n            setShowdialogue(true);\n            setTimeout(()=>setShowdialogue(false),1000);\n        }\n    return (\n       <nav className=\"nav\">\n          <div className=\"logo\">\n              <img src={transparentLogo} alt=\"logo\"/>\n          </div>\n          <div className=\"room-info\">\n              <div className=\"room-name\">{roomInfo.room || \"~404~\"}</div>\n              \n              <div className=\"room-stats\">\n                  <FaGlobe color=\"green\"/>\n                  <span className=\"stats online\">{roomInfo.online || 0} online</span>\n              </div>\n          </div>\n          <div className=\"nav-actions\">\n             <div className=\"action invite\" onClick={invite}>\n                 <FaShareAlt size={25}/>\n                 <div>invite</div>\n\n             </div>\n              <div className=\"action exit\" onClick={()=>history.replace(\"/\")}>\n                  <FaSignOutAlt size={25}/>\n                  <div>exit</div>\n              </div>\n          </div>\n        {showdialogue && <div className=\"dialogue\">\n                <div className=\"content\">Link copied to clipboard!</div>\n        </div>}\n       </nav>\n    )\n}\n\n\nexport default NavBar;\n","import React from 'react';\nimport emojidata from \"./emoji.json\";\nimport \"../styles/emojipicker.css\";\n\nfunction EmojiPicker({onPick}) {\n    return (\n        <div className=\"picker-wrapper\">\n             <div className=\"picker-container\">\n                 <div className=\"searchbar\"></div>\n                 <div className=\"emoji-container\">\n                     <div className=\"emojis\">\n                         {emojidata.map((emojiItem)=>(\n                             <span title={emojiItem.name} key={emojiItem.char} onClick={()=>onPick(emojiItem.char)} className=\"emoji\" role=\"img\" aria-labelledby=\"emoji\">{emojiItem.char}</span>\n                         ))}\n                     </div>\n                 </div>\n             </div>\n        </div>\n    )\n}\n\nexport default EmojiPicker;\n","import React from 'react';\nimport {\n    FaHeart,\n    FaRegThumbsUp,\n    FaRegThumbsDown,\n    FaClinicMedical\n} from \"react-icons/fa\"\n\n\nfunction Actions({onActionClick}) {\n    return (\n        <div className=\"actions-container\">\n            <div className=\"action\" onClick={()=>onActionClick('LIKE')}>\n                <FaRegThumbsUp size={30} color=\"#3498db\"/>\n            </div>\n            <div className=\"action\" onClick={()=>onActionClick('DISLIKE')}>\n                <FaRegThumbsDown size={30} color=\"#bdc3c7\"/>\n            </div>\n            <div className=\"action\" onClick={()=>onActionClick('HEART')}>\n                <FaHeart size={30} color=\"#e74c3c\"/>\n            </div>\n            <div className=\"action\" onClick={()=>onActionClick('STAYHOME')}>\n                <FaClinicMedical size={30} color=\"#2ecc71\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Actions;\n","import React from 'react';\nimport \"../styles/chatview.css\";\nimport {useState,useEffect,useRef} from 'react'\nimport {\n    FaTelegramPlane,\n    FaGreaterThanEqual,\n    FaRegLaugh,\n} from 'react-icons/fa';\nimport NavBar from \"../components/NavBar\";\nimport EmojiPicker from \"../components/EmojiPicker\";\nimport ActionBar from \"../components/Actions\";\n\n//source : https://stackoverflow.com/questions/45719909/scroll-to-bottom-of-an-overflowing-div-in-react\nconst AlwaysScrollToBottom = () => {\n  const elementRef = useRef();\n  useEffect(() => elementRef.current.scrollIntoView());\n  return <div ref={elementRef} />;\n};\n \n\n//messagecomponets and handler for emiting a message\nfunction ChatView({messages,emitMessage,roomInfo,emitAction}) {\n    const [message,setMessage] = useState(\"\");\n    const [showPicker,setShowPicker] = useState(false);\n    const [actionBar, setActionBar] = useState(true);\n     \n    const inputRef=useRef();\n    function sendMessage(e) {\n        if(message.trim()===\"\"){\n            return;\n        }\n        if((e.which && e.which===13) || !e.which){\n             emitMessage(message);\n             setMessage(\"\");\n        }\n    } \n    useEffect(()=>{\n      inputRef.current.focus();\n    },[])\n    return (\n        <>\n        <NavBar roomInfo={roomInfo} />\n        <div className=\"chat-container-wrapper\">\n            <div className=\"chat-container\">\n                <div className=\"chat\" onClick={()=>setShowPicker(false)}>\n                    {messages}\n                    <AlwaysScrollToBottom/>\n                </div>\n                <div className=\"controls-wrapper\">\n                    {actionBar && <ActionBar onActionClick={type=>emitAction(type)}/>}\n                    <div className=\"controls\">\n                        <button className=\"button terminal\" onClick={()=>setActionBar(bool=>!bool)}>\n                            <FaGreaterThanEqual color=\"rgb(15, 72, 146)\" size={25}/>\n                        </button>\n                        <button className=\"button emoj\" onClick={()=>setShowPicker(bool=>!bool)}>\n                            <FaRegLaugh size={25} color=\"rgb(15, 72, 146)\"/>\n                        </button>\n                        <div className=\"input-element\">\n                            <input ref={inputRef} placeholder=\"start typing...\" onClick={()=>setShowPicker(false)} onKeyUp={sendMessage} type=\"text\" value={message} onChange={e=>setMessage(e.target.value)}/>\n                        </div>\n                        <button className=\"button send\" onClick={sendMessage}>\n                            <FaTelegramPlane size={25}/>\n                        </button>\n                    </div>\n                    <div> \n                        { showPicker && <EmojiPicker  onPick={(emoji)=>setMessage(message=>message+emoji)}/>}\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default ChatView;\n","import React, { useState } from 'react';\nimport \"../styles/messageutils.css\";\nimport {useEffect} from 'react'\n\nfunction InfoMessage({message}) {\n    return (\n        <div className=\"info-message-wrapper\">\n            <div className=\"info-message-container\">\n                <div className=\"info-message-content\">{message}</div>\n            </div>\n        </div>\n    )\n}\nfunction WarnMessage({message}) {\n    return (\n        <div className=\"warn-message-wrapper\">\n            <div className=\"warn-message-container\">\n                <div className=\"warn-message-content\">{message}</div>\n            </div>\n        </div>\n    )\n}\nconst BigEmoji=({emoji})=><div style={{fontSize:\"5em\"}}>{emoji}</div>\n\nconst Animatedtext=({text})=>{\n    return(\n        <div className=\"animated-text\">\n            <div className=\"line-1 anim-typewriter\">{text}</div>\n        </div>\n    )\n}\nconst BlurText=({text})=>{\n    return(\n        <div className=\"filter\">\n            <span className=\"blur\">{text}</span>\n        </div>\n    )\n}\n\n\nexport {\n    InfoMessage,\n    WarnMessage,\n    BigEmoji,\n    Animatedtext,\n    BlurText\n};\n\n\n\n\n","import React, { useRef } from 'react';\nimport \"../styles/action.css\";\nimport {useEffect} from 'react';\nimport Lottie from 'react-lottie';\nimport heartData from \"./lottie_files/heart.json\";\nimport likeData from \"./lottie_files/like.json\";\nimport dislikedata from \"./lottie_files/dislike.json\";\nimport stayhomedata from \"./lottie_files/stay_home.json\";\n\n\n\nconst LottieView =({width,height,message,hideMessage,lottieData,timeout=0,data,onDone})=>{\n\n     const defaultOptions = {\n         loop: true,\n         autoplay: true,\n         animationData: lottieData,\n         rendererSettings: {\n             preserveAspectRatio: 'xMidYMid slice'\n         }\n     };\n     useEffect(()=>{\n       let timeOut=setTimeout(()=>{\n         try{\n              onDone();\n         }catch(err){\n             //i dont care\n         }\n       }, timeout);\n       return ()=>clearTimeout(timeOut);\n     },[])\n\n    return(\n        \n            <div className=\"lottie-wrapper\">\n                {!hideMessage && <div className=\"action-info\">{message}</div>}\n                <div className=\"lottie-view\">\n                   <Lottie \n                        options={defaultOptions}\n                        height={width || 400}\n                        width={height || 400}/>\n                </div>\n            </div>\n    )\n}\n\nconst getFromcomponentMap=(props)=>{\n    console.log(\"check\",props);\n    const {isSelf,username}=props.data;\n    switch(props.type){\n        case 'LIKE':     return <LottieView message={`${isSelf?\"you\":username} given`}  timeout={1800} lottieData={likeData} {...props}/>;\n        case 'DISLIKE':  return <LottieView message={`${isSelf?\"you\":username} given`}  timeout={1800} lottieData={dislikedata} {...props}/>;\n        case 'HEART':    return <LottieView message={`${isSelf?\"you\":username} given`}  timeout={2500} lottieData={heartData} {...props}/>;\n        case 'STAYHOME': return <LottieView message={`${isSelf?\"you\":username} saying`} timeout={4000} lottieData={stayhomedata} {...props}/>;\n        default:         return <div></div>;\n    }\n}\nfunction Action(props) {\n\n    return (\n      <div className=\"action-container lottie-container\">\n        {getFromcomponentMap(props)}\n      </div>)\n}\n\nexport default Action;\nexport {getFromcomponentMap}\n\n","import React from 'react';\nimport \"../styles/message.css\";\nimport {BigEmoji,Animatedtext,BlurText} from \"./MessageUtils\";\nimport {useEffect} from \"react\"\nimport {getFromcomponentMap} from \"./Action\";\n\nfunction Message({message}) {\n    let {type,id,username,content,time,isSelf}=message;\n    \n    let pattern = /^<(\\w+)>(.+)<(\\w+)>$/ /*need updation*/\n    let matches = content.match(pattern);\n    /*\n    \"<b>target name<b>\".match(/^<(\\w)>([\\w+\\s]*)<(\\w)>$/) - > gives\n    [\"<b>target name<b>\", \"b\", \"target name\", \"b\", index: 0, input: \"<b>target name<b>\", groups: undefined]\n    */\n    if(matches){\n        let startTag=matches[1];\n        let endTag=matches[3];\n        let targetText=matches[2];\n        if(startTag===endTag){\n            if(startTag===\"big\"){\n                content=<BigEmoji emoji={targetText}/>\n            }else if(startTag===\"a\"){\n                content=<Animatedtext text={targetText}/>\n            }else if(startTag===\"blur\"){\n                content=<BlurText text={targetText}/>\n            }else if(startTag===\"lt\" && ['LIKE','DISLIKE','HEART','STAYHOME'].indexOf(targetText.toUpperCase())!==-1){\n                content=getFromcomponentMap({data:message,type:targetText.toUpperCase(),width:150,height:150,hideMessage:true});\n            }\n        }\n    }\n      return (\n        <div className={`message-wrapper ${isSelf?\"self\":\"\"}`}>\n           <div className=\"message-container\">\n               <div className=\"message\">\n                   <div className=\"message-main\">\n                        <div className=\"sender\">\n                            <div className=\"avatar\">{username[0]}</div>\n                            <div className=\"username\">{username}</div>\n                        </div>\n                        <div className=\"message-content\">\n                            <div className=\"content\">{content}</div>\n                            <div className=\"time\">{time}</div>\n                        </div>\n                   </div>\n               </div>\n           </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import React, { useState,useRef} from 'react';\nimport ChatView from \"./views/ChatView\";\nimport socketio from 'socket.io-client';\nimport {useEffect} from 'react';\n\nimport Message from \"./components/Message\"\nimport {InfoMessage,WarnMessage} from \"./components/MessageUtils\";\nimport {useHistory,} from 'react-router-dom';\n\nimport Action from \"./components/Action\";\n\n\nfunction Chat() {\n\n  //array of jsx\n  const history = useHistory();\n  const [messages, setMessages] = useState([]);\n  const [roomInfo,setRoomInfo]=useState({});\n \n  const [action,setAction]=useState(false);\n  const [actionType,setActionType]=useState(null);\n  const [actionData, setActionData] = useState(null);\n\n  const [connecting, setConnecting]=useState(true);\n  const [connected, setConnected] = useState(false);\n  const [connectionError, setConnectionError] = useState(false);\n\n\n  const socket=useRef();\n  const emitMessage=(data)=>{\n    socket.current.emit('MESSAGE', {type:\"RAW\",data});\n  }\n  const emitAction=(type)=>{\n     socket.current.emit('ACTION',type);\n  }\n\n  useEffect(() => {\n    let urlparams=new URLSearchParams(window.location.search);\n    let username=urlparams.get('username');\n    let room=urlparams.get('room');\n\n    socket.current = socketio();  //production\n    // socket.current = socketio(\"http://localhost:3001\"); //development\n    socket.current.on('connect',()=>{\n        socket.current.emit('JOIN_ROOM',{username,room});\n        socket.current.on('MESSAGE',(data)=>{\n            setMessages(messages=>[...messages,<Message key={Date.now()+\"\"} message={data}/>])\n        });\n        //commands for component content\n        socket.current.on('COMMAND',CMD_data=>{\n            //todo\n        })\n        //actions on ui screen\n        socket.current.on('ACTION',data=>{\n          console.log(\"actionslgk   ..\",data)\n              // if (data.type === ACTIONS.BLINK) {\n                console.log(\"sgksjglkklslk\")\n                setActionData(data);\n                setActionType(data.type);\n                setAction(true);\n              // }\n        })\n        socket.current.on('NEW_USER',msg=>{ \n            setMessages(messages=>[...messages,<InfoMessage key={messages.length} message={msg}/>])\n        })\n        socket.current.on('WELCOME',msg=>{ \n            setMessages(messages=>[...messages,<InfoMessage key={messages.length} message={msg}/>])\n        })\n        socket.current.on('EXIT',msg=>{\n            setMessages(messages=>[...messages,<WarnMessage key={messages.length} message={msg}/>])\n        });\n        socket.current.on('ROOM_INFO',info=>{\n          setRoomInfo(prev=>({...prev,...info}))\n        });\n        socket.current.on('ACCESS_DENIED', () => {\n          //route to main screen\n          // alert(\"you dont have access\");\n          setMessages(messages=>[...messages,<WarnMessage key={messages.length} message=\"something went wrong, redirecting you to the home!\"/>])\n          setTimeout(()=>{\n             let params=new URLSearchParams(window.location.search);\n             history.replace(`/?${params.toString()}`)\n          },2000);\n        });\n       //show an alert on connection\n        setConnecting(false);\n        setConnected(true);\n        setTimeout(() => setConnected(false), 2000);\n    })\n      socket.current.on('reconnecting', () => {\n        setConnecting(true);\n      })\n      socket.current.on('error', () => {\n        setConnectionError(true);\n      })\n\n    return () => {\n      socket.current.close();\n    }\n  }, []);\n\n  return (\n    <div id=\"app\">\n       {connecting && <div className=\"snakebar overlay\"><WarnMessage message=\"connecting...\"/></div>}\n       {connected && <div className=\"snakebar\"><InfoMessage message=\"connected\"/></div>}\n       {connectionError && <div className=\"snakebar\"><WarnMessage message=\"unable to connect\"/></div>}\n       <ChatView emitAction={emitAction} emitMessage={emitMessage} roomInfo={roomInfo} messages={messages}/>\n      {action && <Action onDone={()=>setAction(false)} type={actionType} data={actionData}/>}\n    </div>\n  );\n}\n \nexport default Chat;\n","import React from 'react';\nimport {useState,useEffect} from 'react';\nimport transparentLogo from \"../assets/transparent.png\";\nimport \"../styles/home.css\";\nimport {useHistory,useLocation} from \"react-router-dom\"\n\nfunction Home() {\n    const [username,setUsername]=useState(\"\");\n    const [room,setRoom]=useState(\"\");\n    const [unameError, setUnameError] = useState(false);\n    const [roomError, setRoomError] = useState(false);\n    const history=useHistory();\n    const location=useLocation();\n    function connect(){\n      if(username.trim()===\"\"){\n          setUnameError(true);\n          setTimeout(()=>{setUnameError(false)},1000)\n      }\n      if (room.trim() === \"\") {\n          setRoomError(true);\n          setTimeout(()=>{setRoomError(false)},1000)\n      }\n      if (username.trim() !== \"\" && room.trim() !== \"\"){\n          let params=new URLSearchParams();\n          params.append(\"username\",username);\n          params.append(\"room\",room);\n          history.push(`/chat?${params.toString()}`);\n      }\n    }\n   useEffect(()=>{\n       let params=new URLSearchParams(location.search);\n       setUsername(params.get(\"username\") || \"\");\n       setRoom(params.get(\"room\") || \"\");\n   },[])\n    return (\n        <div className=\"container\">\n            <div className=\"form\">\n                <div className=\"img\">\n                    <img src={transparentLogo} alt=\"logo\"/>\n                </div>\n                <div className={`input-wrapper ${unameError?\"error\":\"\"}`}>\n                    <input type=\"text\" value={username} onChange={e=>setUsername(e.target.value.trim())} placeholder=\"choose a username\"  id=\"username\"/>\n                </div>\n                <div className={`input-wrapper ${roomError?\"error\":\"\"}`}>\n                    <input type=\"text\" value={room} onChange={e=>setRoom(e.target.value.trim())} placeholder=\"enter room id\" id=\"username\"/>\n                </div>\n                <div className=\"form-actions\">\n                    <button className=\"join\" onClick={connect} >join</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport Home from \"./views/Home\";\n\nexport class App extends Component {\n   \n    render() {\n        return (\n          <div className=\"app-full-screen\">\n            <Router>\n              <Switch>\n                  <Route path=\"/\" component={Home} exact/>\n                  <Route path=\"/chat\" component={Chat} exact/> \n                  <Route component={Home}/>\n              </Switch>\n            </Router>\n           </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n","module.exports = __webpack_public_path__ + \"static/media/transparent.ee93a7f4.png\";"],"sourceRoot":""}